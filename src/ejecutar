#!/bin/bash

# Para que acabe si peta
set -e

ALGORITMO=$1
#N=$2
#PROPORCION=$3

PATH_ALGORITMO=./algoritmos/$ALGORITMO
PATH_SALIDAS=./salidas/$ALGORITMO

make

# Comprobamos si el algoritmo existe 
if [ ! -f $PATH_ALGORITMO ]; then
    echo "El algoritmo no existe"
    echo "Lista de algoritmos:"
    for file in $(ls algoritmos | grep -v '\.cc' | grep -v '\-stats'); do
        echo "* $file"
    done
    exit
fi

# Compilamos el programa de generacion de ficheros
#make generador-archivos

# Ejecutamos el generador
#./generador-archivos $N $PROPORCION

# Creamos path de output si no existe

mkdir -p $PATH_SALIDAS

# Ejecutamos el algoritmo para medir el tiempo
$PATH_ALGORITMO archivos/arxiu1 archivos/arxiu2 $PATH_SALIDAS/tiempo.json > $PATH_SALIDAS/output.out

# Ejecutamos el algoritmo para medir estadísticas
$PATH_ALGORITMO-stats archivos/arxiu1 archivos/arxiu2 $PATH_SALIDAS/estadisticas.json > $PATH_SALIDAS/output-stats.out

# Comprobamos que ha dado un resultado correcto

make algoritmo-seguro

./algoritmo-seguro archivos/arxiu1 archivos/arxiu2 > tmp.txt

if ! cmp tmp.txt $PATH_SALIDAS/output.out >/dev/null 2>&1; then
    echo "El algoritmo no ha dado un resultado correcto"
    echo "Resultado correcto:"
    cat tmp.txt
    echo "Resultado algoritmo:"
    cat $PATH_SALIDAS/output.out
    rm -f tmp.txt
    exit
fi

if ! cmp tmp.txt $PATH_SALIDAS/output-stats.out >/dev/null 2>&1; then
    echo "El algoritmo con estadísticas no ha dado un resultado correcto"
    rm -f tmp.txt
    exit
fi

rm -f tmp.txt

# Y escribimos los resultados

echo "Resultado correcto"
echo -n "Tiempos ejecución algoritmo en formato JSON y microsegundos: "
cat $PATH_SALIDAS/tiempo.json
echo ""
echo ""
echo "Estadísticas en formato JSON:"
cat $PATH_SALIDAS/estadisticas.json
echo ""
